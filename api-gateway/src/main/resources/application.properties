eureka.client.service-url.defaultZone=http://eureka:password@localhost:8761/eureka/
spring.application.name=api-gateway
server.port=8089
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty=DEBUG

## Product service routes
spring.cloud.gateway.server.webflux.routes[0].id=product-service
spring.cloud.gateway.server.webflux.routes[0].uri=lb://product-service
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/api/product/**
spring.cloud.gateway.server.webflux.routes[0].filters[0]=RewritePath=/api/(?<segment>.*), /api/$\{segment}

## Order service routes
spring.cloud.gateway.server.webflux.routes[1].id=order-service
spring.cloud.gateway.server.webflux.routes[1].uri=lb://order-service
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/api/order/**
spring.cloud.gateway.server.webflux.routes[1].filters[0]=RewritePath=/api/(?<segment>.*), /api/$\{segment}

# Inventory service routes
spring.cloud.gateway.server.webflux.routes[2].id=inventory-service
spring.cloud.gateway.server.webflux.routes[2].uri=lb://inventory-service
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/api/inventory/**
spring.cloud.gateway.server.webflux.routes[2].filters[0]=RewritePath=/api/(?<segment>.*), /api/$\{segment}

# Discovery service routes
spring.cloud.gateway.server.webflux.routes[3].id=discovery-server
spring.cloud.gateway.server.webflux.routes[3].uri=http://localhost:8761
spring.cloud.gateway.server.webflux.routes[3].predicates[0]=Path=/eureka/web
spring.cloud.gateway.server.webflux.routes[3].filters[0]=SetPath=/

# Discovery service static resources routes
spring.cloud.gateway.server.webflux.routes[4].id=discovery-server-static
spring.cloud.gateway.server.webflux.routes[4].uri=http://localhost:8761
spring.cloud.gateway.server.webflux.routes[4].predicates[0]=Path=/eureka/**

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/Springboot-microservices-realm