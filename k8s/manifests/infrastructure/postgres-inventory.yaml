---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgres-inventory
  name: postgres-inventory
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-inventory
  template:
    metadata:
      labels:
        app: postgres-inventory
    spec:
      containers:
        - image: postgres:latest
          name: postgres
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: postgres-secrets
          volumeMounts:
            - mountPath: /var/lib/postgresql
              name: inventory-data
            - mountPath: /docker-entrypoint-initdb.d
              name: postgres-initdb-config
      volumes:
        - name: inventory-data
          persistentVolumeClaim:
            claimName: postgres-inventory-pvc
        - name: postgres-initdb-config
          configMap:
            name: postgres-initdb-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres-inventory
  name: postgres-inventory-service
spec:
  ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    app: postgres-inventory
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-inventory-pv
spec:
  storageClassName: "standard"
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /tmp/inventory-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-inventory-pvc
spec:
  storageClassName: "standard"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secrets
data:
  POSTGRES_PASSWORD: cGFzc3dvcmQ=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-initdb-config
data:
  initdb.sql: |
    CREATE DATABASE inventory-service;